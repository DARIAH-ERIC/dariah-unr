{
	"name": "@dariah-eric/dariah-unr",
	"private": true,
	"license": "MIT",
	"type": "module",
	"engines": {
		"node": "22.x",
		"pnpm": "10.x"
	},
	"packageManager": "pnpm@10.12.1",
	"scripts": {
		"analyze": "BUNDLE_ANALYZER=\"enabled\" next build --no-lint",
		"build": "next build",
		"db:create-admin-user": "dotenv -c development -- tsx ./prisma/create-admin-user.ts",
		"db:create-annual-values": "dotenv -c development -- tsx ./prisma/create-annual-values.ts",
		"db:create-country-ids-from-sshomp": "dotenv -c development -- tsx ./prisma/create-country-ids-from-sshomp.ts",
		"db:create-initial-entries-from-sshomp": "dotenv -c development -- tsx ./prisma/create-initial-entries-from-sshomp.ts",
		"db:create-operational-cost-thresholds": "dotenv -c development -- tsx ./prisma/create-operational-cost-thresholds.ts",
		"db:create-report-year": "dotenv -c development -- tsx ./prisma/create-report-year.ts",
		"db:create-test-user": "dotenv -c development -- tsx ./prisma/create-test-user.ts",
		"db:update-password": "dotenv -c development -- tsx ./prisma/update-password.ts",
		"db:deploy": "dotenv -c development -- prisma migrate deploy",
		"db:ingest": "dotenv -c development -- tsx ./prisma/ingest.ts",
		"db:generate": "dotenv -c development -- prisma generate",
		"db:migrate": "dotenv -c development -- prisma migrate dev",
		"db:push": "dotenv -c development -- prisma db push --force-reset",
		"db:reset": "dotenv -c development -- prisma migrate reset --skip-seed",
		"db:seed": "dotenv -c development -- prisma db seed",
		"db:ui": "dotenv -c development -- prisma studio",
		"dev": "next dev",
		"dev:db": "docker run -d -e POSTGRES_DB=dariah-unr -e POSTGRES_USER=dariah-unr -e POSTGRES_PASSWORD=dariah-unr --name dariah-unr -p 5432:5432 --rm postgres",
		"format:check": "prettier . \"!./content/**\" --cache --check --ignore-path ./.gitignore",
		"format:fix": "pnpm run format:check --write",
		"i18n:check": "i18n-check --format next-intl --locales ./messages/ --source en --unused ./app/ ./components/",
		"i18n:prepare": "tsx ./scripts/generate-i18n-message-types.ts",
		"images:test-image-signing": "dotenv -c development -- tsx ./test-s3.ts",
		"lint:check": "run-p --continue-on-error \"lint:*:check\"",
		"lint:fix": "run-p --continue-on-error \"lint:*:fix\"",
		"lint:code:check": "eslint . --cache",
		"lint:code:fix": "pnpm run lint:code:check --fix",
		"lint:styles:check": "stylelint \"./**/*.css\" --cache --ignore-path ./.gitignore",
		"lint:styles:fix": "pnpm run lint:styles:check --fix",
		"preinstall": "npx only-allow pnpm",
		"prepare": "run-s setup i18n:prepare db:generate",
		"setup": "is-ci || simple-git-hooks",
		"start": "next start",
		"test:db": "docker run -d -e POSTGRES_DB=dariah-unr-test -e POSTGRES_USER=dariah-unr-test -e POSTGRES_PASSWORD=dariah-unr-test --name dariah-unr-test -p 5432:5432 --rm postgres",
		"test:db:init": "dotenv -c test -- run-s db:reset db:ingest db:create-report-year db:create-operational-cost-thresholds db:create-annual-values db:create-country-ids-from-sshomp db:create-initial-entries-from-sshomp db:create-test-user db:create-admin-user",
		"test:db:push": "dotenv -c test -- prisma db push --force-reset",
		"test:unit": "vitest run",
		"test:unit:ui": "vitest run --ui",
		"test:e2e": "dotenv -c test -- playwright test",
		"test:e2e:codegen": "playwright codegen",
		"test:e2e:install": "playwright install --with-deps",
		"test:e2e:ui": "dotenv -c test -- playwright test --ui",
		"test:e2e:update-snapshots": "dotenv -c test -- playwright test --update-snapshots",
		"types:check": "tsc --noEmit",
		"validate": "run-p format:check lint:check types:check test:unit test:e2e"
	},
	"dependencies": {
		"@acdh-oeaw/lib": "^0.3.2",
		"@acdh-oeaw/validate-env": "^0.0.3",
		"@citation-js/core": "^0.7.18",
		"@citation-js/plugin-csl": "^0.7.18",
		"@imgproxy/imgproxy-node": "^1.1.0",
		"@internationalized/date": "^3.8.2",
		"@keystatic/core": "^0.5.48",
		"@keystatic/next": "^5.0.4",
		"@mdx-js/mdx": "^3.1.0",
		"@react-aria/overlays": "3.28.0",
		"@react-aria/utils": "^3.30.0",
		"@react-stately/data": "^3.13.2",
		"@sentry/nextjs": "^9.41.0",
		"@sindresorhus/slugify": "^3.0.0",
		"@tiptap/extension-bold": "^3.5.1",
		"@tiptap/extension-document": "^3.5.1",
		"@tiptap/extension-link": "^3.5.1",
		"@tiptap/extension-paragraph": "^3.5.1",
		"@tiptap/extension-text": "^3.5.1",
		"@tiptap/extensions": "^3.5.1",
		"@tiptap/pm": "^3.5.1",
		"@tiptap/react": "^3.5.1",
		"bcrypt": "^6.0.0",
		"canvas-confetti": "^1.9.3",
		"client-only": "^0.0.1",
		"cva": "^1.0.0-beta.4",
		"dompurify": "^3.2.7",
		"dset": "^3.1.4",
		"fast-glob": "^3.3.3",
		"image-dimensions": "^2.5.0",
		"lucide-react": "^0.525.0",
		"minio": "^8.0.6",
		"next": "^15.4.4",
		"next-intl": "^4.3.4",
		"nodemailer": "^7.0.5",
		"react": "^19.1.0",
		"react-aria-components": "^1.11.0",
		"react-dom": "^19.1.0",
		"react-schemaorg": "^2.0.0",
		"rehype-slug": "^6.0.0",
		"remark-smartypants": "^3.0.2",
		"server-only": "^0.0.1",
		"sharp": "^0.34.3",
		"shiki": "^3.8.1",
		"uuid": "^13.0.0",
		"valibot": "^1.1.0",
		"zod": "^3.25.76"
	},
	"devDependencies": {
		"@acdh-oeaw/commitlint-config": "^2.0.0",
		"@acdh-oeaw/eslint-config": "^2.0.9",
		"@acdh-oeaw/eslint-config-next": "^2.0.21",
		"@acdh-oeaw/eslint-config-playwright": "^2.0.10",
		"@acdh-oeaw/eslint-config-react": "^2.0.13",
		"@acdh-oeaw/eslint-config-tailwindcss": "^3.0.1",
		"@acdh-oeaw/prettier-config": "^2.0.1",
		"@acdh-oeaw/stylelint-config": "^2.2.0",
		"@acdh-oeaw/tsconfig": "^1.5.1",
		"@commitlint/cli": "^19.8.1",
		"@faker-js/faker": "^9.9.0",
		"@lingual/i18n-check": "^0.8.4",
		"@mdx-js/loader": "^3.1.0",
		"@next/bundle-analyzer": "^15.4.4",
		"@next/eslint-plugin-next": "^15.4.4",
		"@next/mdx": "^15.4.4",
		"@playwright/test": "^1.54.1",
		"@prisma/client": "^6.12.0",
		"@react-aria/optimize-locales-plugin": "^1.1.5",
		"@react-types/shared": "^3.31.0",
		"@shikijs/rehype": "^3.8.1",
		"@tailwindcss/postcss": "^4.1.11",
		"@tailwindcss/typography": "^0.5.16",
		"@types/bcrypt": "^6.0.0",
		"@types/canvas-confetti": "^1.9.0",
		"@types/hast": "^3.0.4",
		"@types/mdx": "^2.0.13",
		"@types/node": "^22.16.5",
		"@types/nodemailer": "^6.4.17",
		"@types/react": "^19.1.8",
		"@types/react-dom": "^19.1.6",
		"@vitest/ui": "^3.2.4",
		"axe-core": "^4.10.3",
		"axe-playwright": "^2.1.0",
		"ci-info": "^4.3.0",
		"dotenv-cli": "^9.0.0",
		"eslint": "^9.31.0",
		"eslint-config-flat-gitignore": "^2.1.0",
		"eslint-plugin-check-file": "^3.3.0",
		"globals": "^16.3.0",
		"is-ci": "^4.1.0",
		"lint-staged": "^16.1.2",
		"npm-run-all2": "^8.0.4",
		"postcss": "^8.5.6",
		"prettier": "^3.6.2",
		"prisma": "^6.12.0",
		"prisma-dbml-generator": "^0.12.0",
		"remark-frontmatter": "^5.0.0",
		"remark-gfm": "^4.0.1",
		"remark-mdx-frontmatter": "^5.2.0",
		"remark-smartypants": "^3.0.2",
		"schema-dts": "^1.1.5",
		"simple-git-hooks": "^2.13.0",
		"stylelint": "^16.22.0",
		"tailwindcss": "^4.1.11",
		"tailwindcss-animate": "^1.0.7",
		"tailwindcss-react-aria-components": "^2.0.0",
		"tsx": "^4.20.3",
		"typescript": "^5.8.3",
		"typescript-eslint": "^8.38.0",
		"vite-tsconfig-paths": "^5.1.4",
		"vitest": "^3.2.4",
		"vitest-mock-extended": "^3.1.0"
	},
	"pnpm": {
		"overrides": {
			"@prisma/generator-helper": "$prisma",
			"@prisma/internals": "$prisma"
		},
		"onlyBuiltDependencies": [
			"@prisma/client",
			"@prisma/engines",
			"@sentry/cli",
			"@tailwindcss/oxide",
			"bcrypt",
			"esbuild",
			"prisma",
			"sharp",
			"simple-git-hooks"
		]
	},
	"browserslist": {
		"development": [
			">=0.75%",
			"not dead",
			"not op_mini all"
		],
		"production": [
			">=0.75%",
			"not dead",
			"not op_mini all"
		]
	},
	"commitlint": {
		"extends": "@acdh-oeaw/commitlint-config"
	},
	"lint-staged": {
		"*.@(js|ts|tsx)": [
			"eslint --cache --fix",
			"prettier --cache --write"
		],
		"*.@(css)": [
			"stylelint --cache --fix",
			"prettier --cache --write"
		],
		"*.!(css|js|ts|tsx),!./content/**": "prettier --cache --ignore-unknown --write"
	},
	"postcss": {
		"plugins": {
			"@tailwindcss/postcss": {}
		}
	},
	"prettier": "@acdh-oeaw/prettier-config",
	"prisma": {
		"seed": "tsx ./prisma/seed.ts"
	},
	"simple-git-hooks": {
		"commit-msg": "pnpm exec commitlint --edit",
		"pre-commit": "pnpm exec lint-staged"
	},
	"stylelint": {
		"extends": "@acdh-oeaw/stylelint-config"
	}
}
